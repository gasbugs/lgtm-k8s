apiVersion: v1
kind: Service
metadata:
  name: mimir
spec:
  selector:
    app: mimir
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mimir
  template:
    metadata:
      labels:
        app: mimir
    spec:
      containers:
        - name: mimir
          image: grafana/mimir:2.12.0
          args: ["--config.file=/etc/mimir.yaml"]
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: mimir-config
              mountPath: /etc/mimir.yaml
              subPath: mimir.yaml
            - name: mimir-config
              mountPath: /etc/alertmanager-fallback-config.yaml
              subPath: alertmanager.yaml
      volumes:
        - name: mimir-config
          configMap:
            name: mimir-config
---
apiVersion: v1
kind: Service
metadata:
  name: loki
spec:
  selector:
    app: loki
  ports:
    - protocol: TCP
      port: 3100
      targetPort: 3100
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:3.1.0
          args: ["-config.file=/etc/loki/local-config.yaml"]
          env:
            - name: JAEGER_AGENT_HOST
              value: otelcol
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 3100
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/local-config.yaml
              subPath: local-config.yaml
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:11.0.1
          ports:
            - containerPort: 3000
          env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Admin"
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "true"
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: "true"
          volumeMounts:
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: grafana-datasources.yaml
      volumes:
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: tempo
spec:
  selector:
    app: tempo
  ports:
    - protocol: TCP
      port: 3200
      targetPort: 3200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
    spec:
      containers:
        - name: tempo
          image: grafana/tempo:2.5.0
          args: ["-config.file=/etc/tempo.yaml"]
          ports:
            - containerPort: 3200
          volumeMounts:
            - name: tempo-config
              mountPath: /etc/tempo.yaml
              subPath: tempo.yaml
      volumes:
        - name: tempo-config
          configMap:
            name: tempo-config
---
apiVersion: v1
kind: Service
metadata:
  name: promtail
spec:
  selector:
    app: promtail
  ports:
    - protocol: TCP
      port: 9080
      targetPort: 9080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
        - name: promtail
          image: grafana/promtail:2.9.5
          args: ["-config.file=/etc/promtail/config.yml"]
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: varlog
              mountPath: /var/log
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: otelcol
spec:
  selector:
    app: otelcol
  ports:
    - name: otlp-grpc
      protocol: TCP
      port: 4317
      targetPort: 4317
    - name: otlp-http
      protocol: TCP
      port: 4318
      targetPort: 4318
    - name: monitoring
      protocol: TCP
      port: 8888
      targetPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otelcol
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otelcol
  template:
    metadata:
      labels:
        app: otelcol
    spec:
      containers:
        - name: otelcol
          image: otel/opentelemetry-collector:0.104.0
          args: ["--config=/etc/otelcol/config.yaml"]
          ports:
            - containerPort: 4317
            - containerPort: 4318
            - containerPort: 8888
          volumeMounts:
            - name: otelcol-config
              mountPath: /etc/otelcol/config.yaml
              subPath: config.yaml
      volumes:
        - name: otelcol-config
          configMap:
            name: otelcol-config
